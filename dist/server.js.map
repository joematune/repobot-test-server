{"version":3,"sources":["webpack://repobot-take-home-server/./src/datasource.ts","webpack://repobot-take-home-server/./src/environment.ts","webpack://repobot-take-home-server/./src/main.ts","webpack://repobot-take-home-server/external \"apollo-datasource-rest\"","webpack://repobot-take-home-server/external \"apollo-server\"","webpack://repobot-take-home-server/webpack/bootstrap","webpack://repobot-take-home-server/webpack/startup"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","apollo_datasource_rest_1","RESTWrapper","RESTDataSource","super","baseURL","get","category","default","environment","apollo","introspection","process","env","APOLLO_INTROSPECTION","playground","APOLLO_PLAYGROUND","port","PORT","__importDefault","mod","__esModule","apollo_server_1","datasource_1","environment_1","typeDefs","gql","ApolloServer","resolvers","Query","joke","root","dataSources","restWrapper","getAJoke","categories","args","getAllCategories","listen","url","console","log","module","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"8CACA,IAAIA,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAGtEO,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtD,MAAMY,EAA2B,EAAQ,KACzC,MAAMC,UAAoBD,EAAyBE,eAC/C,cACIC,QACAxB,KAAKyB,QAAU,mCAEnB,mBACI,OAAO1B,EAAUC,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK0B,IAAI,iBAGxB,SAASC,GACL,OAAO5B,EAAUC,UAAM,OAAQ,GAAQ,YAInC,aAHqBA,KAAK0B,IAAI,SAAU,CACpCC,iBAMhBP,EAAQQ,QAAUN,G,YC9BlBJ,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQS,iBAAc,EAEtBT,EAAQS,YAAc,CAClBC,OAAQ,CACJC,cAAoD,SAArCC,QAAQC,IAAIC,qBAC3BC,WAA8C,SAAlCH,QAAQC,IAAIG,mBAE5BC,KAAML,QAAQC,IAAIK,MANF,M,oBCFpB,IAAIC,EAAmBvC,MAAQA,KAAKuC,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDtB,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtD,MAAMiC,EAAkB,EAAQ,KAC1BC,EAAeJ,EAAgB,EAAQ,MACvCK,EAAgB,EAAQ,KACxBC,EAAWH,EAAgBI,GAAI;;;;;;;;;;;;;;EAqBtB,IAAIJ,EAAgBK,aAAa,CAC5CF,WACAG,UARc,CACdC,MAAO,CACHC,KAAM,CAACC,GAAQxB,aAAcyB,iBAAkBA,EAAYC,YAAYC,SAAS3B,GAChF4B,WAAY,CAACJ,EAAMK,GAAQJ,iBAAkBA,EAAYC,YAAYI,qBAMzEL,YAAa,KAAM,CACfC,YAAa,IAAIV,EAAaf,YAG/B8B,OAAOd,EAAcf,YAAYQ,MAAMrB,MAAK,EAAG2C,UAClDC,QAAQC,IAAI,sBAAsBF,O,QCrCtCG,EAAO1C,QAAU2C,QAAQ,2B,QCAzBD,EAAO1C,QAAU2C,QAAQ,mBCCrBC,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAU9C,QAG3C,IAAI0C,EAASE,EAAyBE,GAAY,CAGjD9C,QAAS,IAOV,OAHA+C,EAAoBD,GAAUE,KAAKN,EAAO1C,QAAS0C,EAAQA,EAAO1C,QAAS6C,GAGpEH,EAAO1C,QCjBf6C,CAAoB,M","file":"server.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst apollo_datasource_rest_1 = require(\"apollo-datasource-rest\");\nclass RESTWrapper extends apollo_datasource_rest_1.RESTDataSource {\n    constructor() {\n        super();\n        this.baseURL = 'https://api.chucknorris.io/jokes';\n    }\n    getAllCategories() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.get('categories');\n        });\n    }\n    getAJoke(category) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.get('random', {\n                category\n            });\n            return result;\n        });\n    }\n}\nexports.default = RESTWrapper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.environment = void 0;\nconst defaultPort = 4000;\nexports.environment = {\n    apollo: {\n        introspection: process.env.APOLLO_INTROSPECTION === 'true',\n        playground: process.env.APOLLO_PLAYGROUND === 'true'\n    },\n    port: process.env.PORT || defaultPort\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst apollo_server_1 = require(\"apollo-server\");\nconst datasource_1 = __importDefault(require(\"./datasource\"));\nconst environment_1 = require(\"./environment\");\nconst typeDefs = apollo_server_1.gql `\n  type Joke {\n    categories: [String!]\n    created_at: String!\n    icon_url: String!\n    id: String!\n    updated_at: String!\n    url: String!\n    value: String!\n  }\n  type Query {\n    joke(category: String!): Joke\n    categories: [String]\n  }\n`;\nconst resolvers = {\n    Query: {\n        joke: (root, { category }, { dataSources }) => dataSources.restWrapper.getAJoke(category),\n        categories: (root, args, { dataSources }) => dataSources.restWrapper.getAllCategories(),\n    },\n};\nconst server = new apollo_server_1.ApolloServer({\n    typeDefs,\n    resolvers,\n    dataSources: () => ({\n        restWrapper: new datasource_1.default()\n    })\n});\nserver.listen(environment_1.environment.port).then(({ url }) => {\n    console.log(`ðŸš€ Server ready at ${url}`);\n});\nif (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(() => console.log('Module disposed. '));\n}\n","module.exports = require(\"apollo-datasource-rest\");;","module.exports = require(\"apollo-server\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(519);\n"],"sourceRoot":""}